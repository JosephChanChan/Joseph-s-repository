package greedy.algorithm;

/**
 * Question Description:
 * 有若干个活动，第i个开始时间和结束时间是[Si,fi)，活动之间不能交叠，要把活动都安排完，至少需要几个教室？
 *
 * Analysis:
 * 这个问题和之前的问题本质差别是什么？
 * 尝试抽象一下。第一个问题是 有限的资源，在给定的所有活动中，选择所有可以安排的活动。第二个问题，将所有活动用最少的资源处理完。
 * 用第一个问题的贪心策略可以解决？尽量将一个教室安排多的活动？答案是不行，反例： A：[1,2)  B：[1,4) C：[5,6) D：[3，7)
 * 假设最优解是 k, 至少需要 k 间教室安排所有活动. 现在选择这些活动时，刚开始 k 是0.
 * 如果现有的k个教室里可以安排下这个活动则直接加进k个教室中。否则，代表什么？代表k个教室都有活动正在进行。
 * 那么必须开多一个教室，k+1. 就是说所有的活动中时间重叠最多的那个数量。意味着有个时间段有 N 个活动都要进行。
 * 那么必须开 N 个教室。其它的重叠活动数都小于这个max{重叠活动数}，N个教室中肯定有教室空下来可以安排剩余的活动。
 * 所以这个策略是正确的。
 *
 * 
 *
 * created by Joseph
 * at 2018/7/31 17:27
 */
public class ActivePlan2 {
}
